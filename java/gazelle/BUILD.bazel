load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")
load("@grpc-java//:java_grpc_library.bzl", "java_rpc_toolchain")
load("@rules_go//go:def.bzl", "go_library", "go_test")
load("@rules_java//java:defs.bzl", "java_library")
load("//java/private:artifact.bzl", "artifact")

# gazelle:exclude def.bzl

go_library(
    name = "gazelle",
    srcs = [
        "configure.go",
        "constants.go",
        "generate.go",
        "lang.go",
        "resolve.go",
    ],
    importpath = "github.com/bazel-contrib/rules_jvm/java/gazelle",
    visibility = ["//visibility:public"],
    deps = [
        "//java/gazelle/javaconfig",
        "//java/gazelle/private/java",
        "//java/gazelle/private/java_export_index",
        "//java/gazelle/private/javaparser",
        "//java/gazelle/private/kotlin",
        "//java/gazelle/private/logconfig",
        "//java/gazelle/private/maven",
        "//java/gazelle/private/sorted_multiset",
        "//java/gazelle/private/sorted_set",
        "//java/gazelle/private/types",
        "@bazel_gazelle//config",
        "@bazel_gazelle//label",
        "@bazel_gazelle//language",
        "@bazel_gazelle//language/proto",
        "@bazel_gazelle//repo",
        "@bazel_gazelle//resolve",
        "@bazel_gazelle//rule",
        "@com_github_bazelbuild_buildtools//build",
        "@com_github_hashicorp_golang_lru//:golang-lru",
        "@com_github_rs_zerolog//:zerolog",
    ],
)

go_test(
    name = "gazelle_test",
    size = "medium",
    timeout = "short",
    srcs = [
        "configure_test.go",
        "generate_test.go",
        "resolve_test.go",
    ],
    embed = [":gazelle"],
    deps = [
        "//java/gazelle/javaconfig",
        "//java/gazelle/private/java",
        "//java/gazelle/private/sorted_set",
        "//java/gazelle/private/types",
        "@bazel_gazelle//config",
        "@bazel_gazelle//label",
        "@bazel_gazelle//language",
        "@bazel_gazelle//language/proto",
        "@bazel_gazelle//pathtools",
        "@bazel_gazelle//repo",
        "@bazel_gazelle//resolve",
        "@bazel_gazelle//rule",
        "@bazel_gazelle//testtools",
        "@bazel_gazelle//walk",
        "@com_github_bazelbuild_buildtools//build",
        "@com_github_google_go_cmp//cmp",
        "@com_github_rs_zerolog//:zerolog",
        "@com_github_sergi_go_diff//diffmatchpatch",
        "@com_github_stretchr_testify//require",
        "@org_golang_x_tools_go_vcs//:vcs",
    ],
)

java_library(
    name = "java_grpc_library_deps__do_not_reference",
    exports = [
        "@grpc-java//api",
        "@grpc-java//protobuf",
        "@grpc-java//stub",
        "@grpc-java//stub:javax_annotation",
        artifact("com.google.code.findbugs:jsr305"),
        artifact("com.google.guava:guava"),
        artifact("com.google.protobuf:protobuf-java"),
    ],
)

java_rpc_toolchain(
    name = "java_grpc_library_toolchain",
    plugin = "@grpc-java//compiler:grpc_java_plugin",
    runtime = [":java_grpc_library_deps__do_not_reference"],
    visibility = ["//visibility:public"],
)

bzl_library(
    name = "repositories",
    visibility = ["//visibility:public"],
    deps = [
        "//java/private:zip_repository",
        "@bazel_tools//tools/build_defs/repo:http.bzl",
        "@bazel_tools//tools/build_defs/repo:utils.bzl",
    ],
)

bzl_library(
    name = "setup",
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/go:repositories",
        "@contrib_rules_jvm_deps//:defs",
    ],
)

bool_flag(
    name = "embed_server",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

config_setting(
    name = "embedded_server",
    flag_values = {
        "//java/gazelle:embed_server": "True",
    },
)
